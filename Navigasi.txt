import 'package:flutter/material.dart';
import 'page/dashboard.dart';
import 'page/search.dart';
import 'page/payment.dart';
import 'page/booking.dart';
import 'page/profile.dart';

class Home extends StatefulWidget {
  const Home({Key? key}) : super(key: key);

  @override
  State<Home> createState() => _HomeState();
}

class _HomeState extends State<Home> {
  int currentTab = 0;
  final List<Widget> screens = [
    Dashboard(),
    Booking(),
    Search(),
    Payment(),
    Profile(),
  ];
  final PageStorageBucket bucket = PageStorageBucket();
  Widget currentScreen = Dashboard();

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: AnimatedSwitcher(
        duration: Duration(milliseconds: 300),
        child: currentScreen,
      ),
      bottomNavigationBar: Container(
        decoration: BoxDecoration(
          color: Theme.of(context).primaryColorDark,
          borderRadius: BorderRadius.only(
            topLeft: Radius.circular(20.0),
            topRight: Radius.circular(20.0),
          ),
        ),
        child: ClipRRect(
          borderRadius: BorderRadius.only(
            topLeft: Radius.circular(20.0),
            topRight: Radius.circular(20.0),
          ),
          child: BottomAppBar(
            shape: CircularNotchedRectangle(),
            notchMargin: 10,
            child: Container(
              height: 60,
              child: Row(
                mainAxisAlignment: MainAxisAlignment.spaceAround,
                children: <Widget>[
                  buildBottomNavItem(0, Icons.menu, 'Home', Colors.green),
                  buildBottomNavItem(1, Icons.list, 'Booking', Colors.green),
                  buildBottomNavItem(2, Icons.search, 'Search', Colors.blue),
                  buildBottomNavItem(3, Icons.payment, 'Payment', Colors.blue),
                  buildBottomNavItem(4, Icons.person, 'Profile', Colors.blue),
                ],
              ),
            ),
          ),
        ),
      ),
    );
  }

  Widget buildBottomNavItem(int index, IconData icon, String label, Color color) {
    return Expanded(
      child: MaterialButton(
        minWidth: 40,
        onPressed: () {
          setState(() {
            currentScreen = screens[index];
            currentTab = index;
          });
        },
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            Icon(
              icon,
              color: currentTab == index ? color : Colors.grey,
            ),
            Text(
              label,
              style: TextStyle(
                color: currentTab == index ? color : Colors.grey,
              ),
            ),
          ],
        ),
      ),
    );
  }
}
